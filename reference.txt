cut down functions
--------------------------------
chest_at_tile							->cat
closed_chest_at_tile					->ccat
closed_chest_at_surrounding_location	->ccasl
player.attack_selection					->player.a_s
update_a_s								->update_attack_selection
item_num_to_string						->i_to_s
shop_state								->ss

Enemies
-----------------------------------------
	Arg list:
		1 - Name
		2 - Movement Squares
		3 - Attack Points (num dice for attack)
		4 - Defence Points (num dice for defence)
		5 - Body Points 
		6 - Mind Points
		7 - Sprite Num

	Types:
		add(enemy_type, {"goblin",10,2,1,1,1, 16})
		add(enemy_type, {"skeleton",6,2,2,1,0, 17})
		add(enemy_type, {"zombie",5,2,3,1,0,18})
		add(enemy_type, {"orc",8,3,2,1,2,19})
		add(enemy_type, {"fimir",6,3,3,2,3,20})
		add(enemy_type, {"mummy",4,3,4,2,0,21})
		add(enemy_type, {"chaos warrior",7,4,4,3,3,22})
		add(enemy_type, {"gargoyle",6,4,5,3,4,23})

chest_data
----------------------------------------------
	Arg List:
		1 - x (cell, not pixel)
		2 - y (cell, not pixel)
		3 - type
			1 - gold
			2 - heal potion 
			3 - magic potion
		4 - strength

chest properties
-------------------------
	x
	y
	chest_type (number)
	amount (number)
	opened (bool)

player properties
-------------------------
	int		x
	int		y
	int		ml
	int		menu_selection
	int		item_selection
	string	state
				"move_or_action"
				"move"
				"attack_menu"
				"player_stats"
				"select_item"
	bool	move_used
	bool	action_used
	bool 	dice_rolled
	string	name
	int		ap
	int 	dp
	int 	max_bp
	int 	bp
	int 	mp
	int 	sprite
	bool 	human (always true for player)
	bool	alive
	int		g
	table 	items
				1 - heal potion

move_or_action_menu
-------------------
	move_or_action_menu[1] = "         move        "
	move_or_action_menu[2] = "        attack       "	
	move_or_action_menu[3] = "  search for traps   "
	move_or_action_menu[4] = " search for treasure "
	move_or_action_menu[5] = "       use item      "
	move_or_action_menu[6] = "     player stats    "
	move_or_action_menu[7] = "     finish turn     "


chests have multiple items/effects
carrying chests (only one movement die)
healing potions have different strengths
hidden doors can be revealed by items
show quest instructions at start of quest

4129

events
------
text for starting a mission
text for fulfilling an objective 
 - finding treasure
 - killing an enemy
text for trying to exit before objective is complete
text for exiting after objective complete
on entering a room
on killing an enemy

item_select_state = {
	update = function ()
		local p = actors[actor_index]
		if (btnp(2)) p.item_selection -= 1
		if (btnp(3)) p.item_selection += 1
		if (p.item_selection < 1) p.item_selection = #p.items
		if (p.item_selection > #p.items) p.item_selection = 1
		if (btnp(4)) then
			app_state = game_state
		end
		if (btnp(5)) then
			local item = p.items[p.item_selection]
			if item == 2 then
				local old_bp = p.bp			
				p.bp += 4
				if(p.bp > p.max_bp) p.bp = p.max_bp
				gui.msg("used potion of heal")
				gui.msg(p.bp - old_bp .. " body restored" )
			elseif item == 3 then
				local old_mp = p.mp			
				p.mp += 4
				p.mp = min(p.mp, p.max_mp)
				gui.msg("used magic restore")
				gui.msg(p.mp - old_mp .. " magic restored" )
			end
			del(p.items, p.items[p.item_selection])
			app_state = game_state
		end
	end,

	draw = function()
		local p = actors[actor_index]		
		camera()
		rectfill(0,0,128,128, 4)
		print("items:", 10, 40, 7)
		local y_offset = 50
		
		for num=1, #p.items do
			if p.item_selection == num then 
				print("*" .. i_to_s(p.items[num]) .. "*", 10, y_offset, 7)
			else
				print(i_to_s(p.items[num]), 10, y_offset, 7)
			end
			y_offset += 10
		end	
		restore_camera()	
	end
}